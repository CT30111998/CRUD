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 TOKEN for Git


import { Component, OnInit } from '@angular/core';
import {SharedService} from 'src/app/shared.service';

@Component({
  selector: 'app-show-emp',
  templateUrl: './show-emp.component.html',
  styleUrls: ['./show-emp.component.css']
})
export class ShowEmpComponent implements OnInit {

  constructor(private service:SharedService) { }

  EmployeeList:any=[];

  ModalTitle:string;
  ActivateAddEditEmpComp:boolean=false;
  emp:any;

  ngOnInit(): void {
    this.refreshEmpList();
  }

  addClick(){
    this.emp={
      EmployeeId:0,
      EmployeeName:"",
      Department:"",
      DateOfJoining:"",
      PhotoFileName:"anonymous.png"
    }
    this.ModalTitle="Add Employee";
    this.ActivateAddEditEmpComp=true;

  }

  editClick(item){
    console.log(item);
    this.emp=item;
    this.ModalTitle="Edit Employee";
    this.ActivateAddEditEmpComp=true;
  }

  deleteClick(item){
    if(confirm('Are you sure??')){
      this.service.deleteEmployee(item.EmployeeId).subscribe(data=>{
        alert(data.toString());
        this.refreshEmpList();
      })
    }
  }

  closeClick(){
    this.ActivateAddEditEmpComp=false;
    this.refreshEmpList();
  }


  refreshEmpList(){
    this.service.getEmpList().subscribe(data=>{
      this.EmployeeList=data;
    });
  }

}














 <label class="col-sm-2 col-form-label">Employee Name</label>
        <div class="col-sm-10">
            <input type="text" required minlength="2" #name="ngModel" [class.is-invalid]="name.invalid && name.touched" name="EmployeeName" class="form-control" [(ngModel)]="EmployeeName" placeholder="Enter Employee Name">

            <div *ngIf="name.errors && (name.invalid || name.touched)" [class.d-none]="name.untouched" >
                <small class="text-danger" *ngIf="name.errors ['required'] ">Name is requied</small>
                    <small class="text-danger" *ngIf="name.errors ['minlength'] ">Name is to small</small>
            </div>
        </div>



            elif request.method=='POST':
        department_data=JSONParser().parse(request)
        department_serializer = DepartmentSerializer(data=department_data)
        if department_serializer.is_valid():
            check_existing=Employees.objects.filter(EmailId=EmailId) and Employees.objects.filter(EmployeeName=EmployeeName).exists()
            if check_existing:
                messages.success(request,'Email Allready Exist')
                return redirect('/')
            else:
                department_serializer.save()
            return JsonResponse("Added Successfully!!" , safe=False)
        return JsonResponse("Failed to Add.",safe=False)






<div class="d-flex flex-row bd-highlight mb-3">

    <div class="form-froup row" style="width: 60%;">

        <label class="col-sm-2 col-form-label">Employee Name</label>
        <div class="col-sm-10">
            <input type="text" required minlength="2" #name="ngModel" [class.is-invalid]="name.invalid && name.touched"
                name="EmployeeName" class="form-control" [(ngModel)]="EmployeeName" placeholder="Enter Employee Name">

            <div *ngIf="name.errors && (name.invalid || name.touched)" [class.d-none]="name.untouched">
                <small class="text-danger" *ngIf="name.errors ['required'] ">Name is requied</small>
                <small class="text-danger" *ngIf="name.errors ['minlength'] ">Name is to small</small>
            </div>
        </div>

        <label class="col-sm-2 col-form-label">Email ID</label>
        <div class="col-sm-10">
            <input type="text" required minlength="2" #email="ngModel"
                [class.is-invalid]="email.invalid && email.touched" name="email" class="form-control"
                [(ngModel)]="EmailId" placeholder="xyz@gmail.com">

            <div *ngIf="email.errors && (email.invalid || email.touched)" [class.d-none]="email.untouched">
                <small class="text-danger" *ngIf="email.errors ['required'] ">Email ID is requied</small>
                <small class="text-danger" *ngIf="email.errors ['minlength'] ">Email is to small</small>
            </div>
        </div>


        <label class="col-sm-2 col-form-label">Department</label>
        <div class="col-sm-10">
            <select class="form-control" [(ngModel)]="Department">
                <option>--Select--</option>
                <option *ngFor="let depName of DepartmentsList">
                    {{depName.DepartmentName}}
                </option>
            </select>
        </div>

        <label class="col-sm-2 col-form-label">Date of joining</label>
        <div class="col-sm-10">
            <input type="date" [(ngModel)]="DateOfJoining">
        </div>

    </div>
    <div class="ml-3 bd-highlight" style="width: 40%;">
        <img [src]=ImgPath height="250px;" width="200px;">
        <input type="file" (change)="uploadPhoto($event)" class="mt-2" />
    </div>
</div>


<button (click)="addEmployee()" *ngIf="emp.EmployeeId==0" class="btn btn-primary">
    Add
</button>

<button (click)="updateEmployee()" *ngIf="emp.EmployeeId!=0" class="btn btn-primary">
    Update
</button>